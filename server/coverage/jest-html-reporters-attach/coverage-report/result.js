window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":3,"numPassedTestSuites":0,"numPassedTests":18,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":21,"startTime":1711038212961,"success":false,"testResults":[{"numFailingTests":3,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1711038216099,"runtime":2940,"slow":false,"start":1711038213159},"testFilePath":"C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\src\\src.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mLoginModule API › Unsuccessful HTTP tests › HTTP GET: It should respond with Status 500 and error message\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m200\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 228 |\u001b[39m                     username\u001b[33m:\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mDate\u001b[39m()\u001b[22m\n\u001b[2m     \u001b[90m 229 |\u001b[39m                 })\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 230 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 231 |\u001b[39m             expect(response\u001b[33m.\u001b[39mtext)\u001b[33m.\u001b[39mtobe(\u001b[32m\"TypeError: Cannot read properties of null (reading 'password')\"\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 232 |\u001b[39m         })\u001b[22m\n\u001b[2m     \u001b[90m 233 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/src.test.js\u001b[39m\u001b[0m\u001b[2m:230:37)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProfileModule API › Unsuccessful HTTP tests › HTTP GET: It should respond with Status 500 and error message\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 281 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request(\u001b[33mServer\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 282 |\u001b[39m                 \u001b[33m.\u001b[39m\u001b[36mget\u001b[39m(\u001b[32m\"/profile/CoogsLover\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 283 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 284 |\u001b[39m             expect(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 285 |\u001b[39m                 \u001b[36mif\u001b[39m(response\u001b[33m.\u001b[39merror) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Error occurred: '\u001b[39m\u001b[33m+\u001b[39m response\u001b[33m.\u001b[39merror)\u001b[22m\n\u001b[2m     \u001b[90m 286 |\u001b[39m             })\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/src.test.js\u001b[39m\u001b[0m\u001b[2m:283:37)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mProfileModule API › Unsuccessful HTTP tests › HTTP PUT: It should respond with Status 500 and error message\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m500\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 304 |\u001b[39m             \u001b[36mconst\u001b[39m response \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m request(\u001b[33mServer\u001b[39m)\u001b[22m\n\u001b[2m     \u001b[90m 305 |\u001b[39m                 \u001b[33m.\u001b[39mput(\u001b[32m'/profile/johncena'\u001b[39m)\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 306 |\u001b[39m             expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m500\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 307 |\u001b[39m             expect(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 308 |\u001b[39m                 \u001b[36mif\u001b[39m(response\u001b[33m.\u001b[39merror) \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mError\u001b[39m(\u001b[32m'Error occurred: '\u001b[39m\u001b[33m+\u001b[39m response\u001b[33m.\u001b[39merror)\u001b[22m\n\u001b[2m     \u001b[90m 309 |\u001b[39m             })\u001b[33m.\u001b[39mtoThrow()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/src.test.js\u001b[39m\u001b[0m\u001b[2m:306:37)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["FuelQuoteModule API","Successful HTTP tests"],"duration":343,"failureMessages":[],"fullName":"FuelQuoteModule API Successful HTTP tests HTTP POST: It should respond with Status 200 and confirmation text","status":"passed","title":"HTTP POST: It should respond with Status 200 and confirmation text"},{"ancestorTitles":["FuelQuoteModule API","Successful HTTP tests"],"duration":51,"failureMessages":[],"fullName":"FuelQuoteModule API Successful HTTP tests HTTP GET: It should respond with Status 200","status":"passed","title":"HTTP GET: It should respond with Status 200"},{"ancestorTitles":["FuelQuoteModule API","Successful HTTP tests"],"duration":52,"failureMessages":[],"fullName":"FuelQuoteModule API Successful HTTP tests HTTP GET: It should respond with Status 200","status":"passed","title":"HTTP GET: It should respond with Status 200"},{"ancestorTitles":["FuelQuoteModule API","Unsuccessful HTTP tests"],"duration":4,"failureMessages":[],"fullName":"FuelQuoteModule API Unsuccessful HTTP tests HTTP POST: It should respond with Status 400 and reason message","status":"passed","title":"HTTP POST: It should respond with Status 400 and reason message"},{"ancestorTitles":["FuelQuoteModule API","Unsuccessful HTTP tests"],"duration":16,"failureMessages":[],"fullName":"FuelQuoteModule API Unsuccessful HTTP tests HTTP POST: It should respond with Status 500 and error message","status":"passed","title":"HTTP POST: It should respond with Status 500 and error message"},{"ancestorTitles":["FuelQuoteModule API","Unsuccessful HTTP tests"],"duration":4,"failureMessages":[],"fullName":"FuelQuoteModule API Unsuccessful HTTP tests HTTP GET: It should respond with Status 500 and error message","status":"passed","title":"HTTP GET: It should respond with Status 500 and error message"},{"ancestorTitles":["FuelQuoteModule API","Unsuccessful HTTP tests"],"duration":3,"failureMessages":[],"fullName":"FuelQuoteModule API Unsuccessful HTTP tests HTTP GET: It should respond with Status 500 and error message","status":"passed","title":"HTTP GET: It should respond with Status 500 and error message"},{"ancestorTitles":["LoginModule API","Successful HTTP tests"],"duration":106,"failureMessages":[],"fullName":"LoginModule API Successful HTTP tests HTTP POST: It should respond with Status 200 and confirmation text","status":"passed","title":"HTTP POST: It should respond with Status 200 and confirmation text"},{"ancestorTitles":["LoginModule API","Successful HTTP tests"],"duration":50,"failureMessages":[],"fullName":"LoginModule API Successful HTTP tests HTTP GET: It should respond with Status 200 with true and username","status":"passed","title":"HTTP GET: It should respond with Status 200 with true and username"},{"ancestorTitles":["LoginModule API","Successful HTTP tests"],"duration":46,"failureMessages":[],"fullName":"LoginModule API Successful HTTP tests HTTP GET: It should respond with Status 200 and false","status":"passed","title":"HTTP GET: It should respond with Status 200 and false"},{"ancestorTitles":["LoginModule API","Successful HTTP tests"],"duration":104,"failureMessages":[],"fullName":"LoginModule API Successful HTTP tests HTTP GET: It should respond with Status 200 with a true value","status":"passed","title":"HTTP GET: It should respond with Status 200 with a true value"},{"ancestorTitles":["LoginModule API","Successful HTTP tests"],"duration":42,"failureMessages":[],"fullName":"LoginModule API Successful HTTP tests HTTP GET: It should respond with Status 200 with a false value","status":"passed","title":"HTTP GET: It should respond with Status 200 with a false value"},{"ancestorTitles":["LoginModule API","Unsuccessful HTTP tests"],"duration":67,"failureMessages":[],"fullName":"LoginModule API Unsuccessful HTTP tests HTTP POST: It should respond with Status 500 and error text","status":"passed","title":"HTTP POST: It should respond with Status 500 and error text"},{"ancestorTitles":["LoginModule API","Unsuccessful HTTP tests"],"duration":46,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m200\u001b[39m\n    at Object.toBe (C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\src\\src.test.js:230:37)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"LoginModule API Unsuccessful HTTP tests HTTP GET: It should respond with Status 500 and error message","status":"failed","title":"HTTP GET: It should respond with Status 500 and error message"},{"ancestorTitles":["LoginModule API","Unsuccessful HTTP tests"],"duration":42,"failureMessages":[],"fullName":"LoginModule API Unsuccessful HTTP tests HTTP GET: It should respond with Status 500 and error message","status":"passed","title":"HTTP GET: It should respond with Status 500 and error message"},{"ancestorTitles":["ProfileModule API","Successful HTTP tests"],"duration":41,"failureMessages":[],"fullName":"ProfileModule API Successful HTTP tests HTTP GET: It should respond with Status 200","status":"passed","title":"HTTP GET: It should respond with Status 200"},{"ancestorTitles":["ProfileModule API","Successful HTTP tests"],"duration":87,"failureMessages":[],"fullName":"ProfileModule API Successful HTTP tests HTTP PUT: It should respond with Status 200","status":"passed","title":"HTTP PUT: It should respond with Status 200"},{"ancestorTitles":["ProfileModule API","Unsuccessful HTTP tests"],"duration":41,"failureMessages":[],"fullName":"ProfileModule API Unsuccessful HTTP tests HTTP GET: It should respond with Status 404 and message","status":"passed","title":"HTTP GET: It should respond with Status 404 and message"},{"ancestorTitles":["ProfileModule API","Unsuccessful HTTP tests"],"duration":55,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\src\\src.test.js:283:37)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"ProfileModule API Unsuccessful HTTP tests HTTP GET: It should respond with Status 500 and error message","status":"failed","title":"HTTP GET: It should respond with Status 500 and error message"},{"ancestorTitles":["ProfileModule API","Unsuccessful HTTP tests"],"duration":43,"failureMessages":[],"fullName":"ProfileModule API Unsuccessful HTTP tests HTTP PUT: It should respond with Status 404 and message","status":"passed","title":"HTTP PUT: It should respond with Status 404 and message"},{"ancestorTitles":["ProfileModule API","Unsuccessful HTTP tests"],"duration":43,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m500\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.toBe (C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\src\\src.test.js:306:37)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"ProfileModule API Unsuccessful HTTP tests HTTP PUT: It should respond with Status 500 and error message","status":"failed","title":"HTTP PUT: It should respond with Status 500 and error message"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":8,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":true,"projects":[],"reporters":[["default",{}],["C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./coverage","filename":"coverage-report.html","expand":true}]],"rootDir":"C:\\Users\\nikol\\Desktop\\Software Design group-project\\server","runTestsByPath":false,"seed":-1925218661,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\nikol\\Desktop\\Software Design group-project\\server\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":true,"watchman":true,"workerThreads":false,"coverageLinkPath":"lcov-report\\index.html"},"endTime":1711038216155,"_reporterOptions":{"publicPath":"./coverage","filename":"coverage-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})